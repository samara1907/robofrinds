{"ast":null,"code":"import{CHANGE_SEARCH_FIELD,REQUEST_ROBOTS_PINDING,REQUEST_ROBOTS_SUCCESS,REQUEST_ROBOTS_FAILED}from'./constants.js';export var setSearchfield=function setSearchfield(text){return{type:CHANGE_SEARCH_FIELD,payload:text};};export var requestRobots=function requestRobots(){return function(dispatch){dispatch({type:REQUEST_ROBOTS_PINDING});fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(data){return dispatch({type:REQUEST_ROBOTS_SUCCESS,payload:data});}).catch(function(error){return dispatch({type:REQUEST_ROBOTS_FAILED,payload:error});});};};","map":{"version":3,"sources":["C:/Users/pc link/Desktop/robofrinds/src/actions.js"],"names":["CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PINDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setSearchfield","text","type","payload","requestRobots","dispatch","fetch","then","response","json","data","catch","error"],"mappings":"AAAA,OAAQA,mBAAR,CAA8BC,sBAA9B,CACCC,sBADD,CAECC,qBAFD,KAE6B,gBAF7B,CAKA,MAAO,IAAMC,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,CAACC,IAAD,QAAS,CACpCC,IAAI,CAAEN,mBAD8B,CAEpCO,OAAO,CAAEF,IAF2B,CAAT,EAArB,CAKP,MAAO,IAAMG,CAAAA,aAAa,CAAE,QAAfA,CAAAA,aAAe,SAAM,UAACC,QAAD,CAAc,CAC/CA,QAAQ,CAAC,CAACH,IAAI,CAACL,sBAAN,CAAD,CAAR,CACAS,KAAK,CAAC,4CAAD,CAAL,CAAoDC,IAApD,CAAyD,SAAAC,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAT,EAAH,EAAjE,EACCF,IADD,CACM,SAAAG,IAAI,QAAEL,CAAAA,QAAQ,CAAC,CAACH,IAAI,CAAEJ,sBAAP,CAA+BK,OAAO,CAAEO,IAAxC,CAAD,CAAV,EADV,EAECC,KAFD,CAEO,SAAAC,KAAK,QAAGP,CAAAA,QAAQ,CAAC,CAACH,IAAI,CAAEH,qBAAP,CAA8BI,OAAO,CAAES,KAAvC,CAAD,CAAX,EAFZ,EAGA,CAL2B,EAArB","sourcesContent":["import {CHANGE_SEARCH_FIELD , REQUEST_ROBOTS_PINDING,\r\n REQUEST_ROBOTS_SUCCESS , \r\n REQUEST_ROBOTS_FAILED} from './constants.js';\r\n\r\n\r\nexport const setSearchfield=(text)=>({\r\n\ttype: CHANGE_SEARCH_FIELD ,\r\n\tpayload: text\r\n})\r\n\r\nexport const requestRobots =() => (dispatch) => {\r\n\tdispatch({type:REQUEST_ROBOTS_PINDING});\r\n\tfetch('https://jsonplaceholder.typicode.com/users').then(response=> response.json())\r\n\t.then(data=>dispatch({type: REQUEST_ROBOTS_SUCCESS, payload: data}))\r\n\t.catch(error=> dispatch({type: REQUEST_ROBOTS_FAILED, payload: error}))\r\n}"]},"metadata":{},"sourceType":"module"}