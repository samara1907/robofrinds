{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc link\\\\Desktop\\\\robofrinds\\\\src\\\\containers\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Cardlist from '../Components/Cardlist';\nimport SearchBox from '../Components/SearchBox';\nimport '../containers/App.css';\nimport Scroll from '../Components/Scroll';\nimport ErrorBoundry from '../Components/ErrorBoundry';\nimport { setSearchfield } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    searchfield: state.searchRobots.searchfield,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onsearchchange: event => dispatch(setSearchfield(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const {\n      robots\n    } = this.state;\n    const {\n      searchfield,\n      onsearchchange\n    } = this.props;\n    const filterrobota = robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchfield.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 4\n        }\n      }, \"RoboFriends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchchange: onsearchchange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 4\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(ErrorBoundry, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Cardlist, {\n        robots: filterrobota,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/pc link/Desktop/robofrinds/src/containers/App.js"],"names":["React","Component","connect","Cardlist","SearchBox","Scroll","ErrorBoundry","setSearchfield","mapStateToProps","state","searchfield","searchRobots","robots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onsearchchange","event","target","value","App","constructor","componentDidMount","fetch","then","response","json","users","setState","render","props","filterrobota","filter","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,uBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAAQC,cAAR,QAA6B,YAA7B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AAAEC,IAAAA,WAAW,EAAED,KAAK,CAACE,YAAN,CAAmBD,WAAlC;AACNE,IAAAA,MAAM,EAAEH,KAAK,CAACI,aAAN,CAAoBD,MADtB;AAENE,IAAAA,SAAS,EAAEL,KAAK,CAACI,aAAN,CAAoBC,SAFzB;AAGNC,IAAAA,KAAK,EAAEN,KAAK,CAACI,aAAN,CAAoBE;AAHrB,GAAP;AAKA,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAa;AACvC,SAAO;AAACC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACV,cAAc,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAApC,GAAP;AAEA,CAHD;;AAMA,MAAMC,GAAN,SAAkBrB,SAAlB,CAA4B;AAC3BsB,EAAAA,WAAW,GAAE;AACZ;AACA,SAAKd,KAAL,GAAY;AACXG,MAAAA,MAAM,EAAE;AADG,KAAZ;AAGA;;AAEDY,EAAAA,iBAAiB,GAAE;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACEC,IADF,CACOC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADlB,EAEEF,IAFF,CAEOG,KAAK,IAAG,KAAKC,QAAL,CAAc;AAAClB,MAAAA,MAAM,EAAEiB;AAAT,KAAd,CAFf;AAIA;;AAEDE,EAAAA,MAAM,GAAE;AACP,UAAM;AAACnB,MAAAA;AAAD,QAAU,KAAKH,KAArB;AACA,UAAM;AAACC,MAAAA,WAAD;AAAeQ,MAAAA;AAAf,QAAiC,KAAKc,KAA5C;AACA,UAAMC,YAAY,GAAGrB,MAAM,CAACsB,MAAP,CAActB,MAAM,IAAE;AAC1C,aAAOA,MAAM,CAACuB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC3B,WAAW,CAAC0B,WAAZ,EAAnC,CAAP;AACA,KAFoB,CAArB;;AAGA,QAAI,KAAK3B,KAAL,CAAWG,MAAX,CAAkB0B,MAAlB,KAA4B,CAAhC,EAAkC;AACjC,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA,KAFD,MAEM;AACL,0BACA;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAEpB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,eAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEe,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,CAHA,CADA;AAWA;AAED;;AArC0B;;AAyC5B,eAAe/B,OAAO,CAACM,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CM,GAA7C,CAAf","sourcesContent":["import React , {Component} from 'react';\r\nimport {connect } from 'react-redux';\r\nimport Cardlist from '../Components/Cardlist';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport '../containers/App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundry from '../Components/ErrorBoundry';\r\nimport {setSearchfield} from '../actions';\r\n\r\nconst mapStateToProps = state => {\r\n\treturn { searchfield: state.searchRobots.searchfield,\r\n\t\trobots: state.requestRobots.robots,\r\n\t\tisPending: state.requestRobots.isPending,\r\n\t\terror: state.requestRobots.error\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n\treturn {onsearchchange: (event) => dispatch(setSearchfield(event.target.value))\r\n\t}\r\n}\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state ={\r\n\t\t\trobots: []\r\n\t\t} \r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response=> response.json())\r\n\t\t\t.then(users=> this.setState({robots: users}));\r\n\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst {robots}= this.state;\r\n\t\tconst {searchfield , onsearchchange} = this.props;\r\n\t\tconst filterrobota = robots.filter(robots=>{\r\n\t\t\treturn robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t})\r\n\t\tif (this.state.robots.length ===0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else{\r\n\t\t\treturn(\r\n\t\t\t<div className='tc'>\r\n\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t<SearchBox searchchange={onsearchchange} />\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundry>\r\n\t\t \t\t\t<Cardlist robots={filterrobota} /> \r\n\t\t \t\t</ErrorBoundry>\r\n\t\t \t</Scroll>\r\n\t\t \t</div>\r\n\t\t );\r\n\t\t}\r\n\r\n\t}\r\n\t\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}